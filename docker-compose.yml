version: '3.8'

services:
    # dev:
    #     build:
    #     context: .
    #     dockerfile: Dockerfile1
    #     image: ui-dev
    #     container_name: webpack-container
    #     environment:
    #     - NODE_ENV=development
    #     ports:
    #     - "3000:3000"
    #     - "35729:35729"
    #     - "27017:27017"
    #     - "27018:27018"
    #     volumes:
    #     - .:/app
    #     - /app/node_modules
    # test:
    #     build:
    #     context: .
    #     dockerfile: Dockerfile
    #     image: ui-test
    #     container_name: webpack-test-container
    #     environment:
    #     - NODE_ENV=test
    #     volumes:
    #     - .:/app
    #     - /app/node_modules
    #     command: npm test
    # prod:
    #     build:
    #     context: .
    #     dockerfile: Dockerfile
    #     image: guest-ui-prod
    #     container_name: prod-container
    #     environment:
    #     - NODE_ENV=production
    #     ports:
    #     - "8002:8000"
    #     - "27007:27017"
    #     - "27008:27018"
    #     volumes:
    #     - /app/node_modules


    webnew-prod:
        container_name: teenyurl_webnew_prod
        image: guest-ui-prod
        build: 
            context: ./webnew
            dockerfile: Dockerfile1
        ports:
        - "8002:8000"
        - "27007:27017"
        - "27008:27018"
        # ports:
        #     - "3000"        
        volumes:
        - /app/node_modules
        - ./webnew:/app
        # env_file:
        # - ./.env
        environment: 
            # - NODE_ENV=production
            - NODE_ENV=development
            - REACT_APP_A=${A}
            - REACT_APP_Y=fromdockercompose
            - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
            - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
            # - npm_config_unsafe_perm=true
            # - process.env.NODE_ENV='development'
            # - CHOKIDAR_USEPOLLING=true
        tty: true
        stdin_open: true

    webnew-dev:
        container_name: teenyurl_webnew_dev
        image: ui-dev
        # container_name: webpack-container
        environment:
        - NODE_ENV=development
        volumes:
        - .:/app
        - /app/node_modules
        build: 
            context: ./webnew
            dockerfile: Dockerfile1
        ports:
        - "3000:3000"
        - "35729:35729"
        - "20007:27017"
        - "20008:27018"
        # ports:
        #     - "3000"        
        volumes:
        - /app/node_modules
        - ./webnew:/app
        # env_file:
        # - ./.env
        environment: 
            - NODE_ENV=development
            - REACT_APP_A=${A}
            - REACT_APP_Y=fromdockercompose
            - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
            - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
            # - npm_config_unsafe_perm=true
            # - process.env.NODE_ENV='development'
            # - CHOKIDAR_USEPOLLING=true
        tty: true
        stdin_open: true

    webnew-test:
        container_name: teenyurl_webnew_webpack-test-container
        image: ui-test
        command: npm test
        build: 
            context: ./webnew
            dockerfile: Dockerfile1       
        volumes:
        - /app/node_modules
        - ./webnew:/app
        # env_file:
        # - ./.env
        environment: 
            - NODE_ENV=test
            - REACT_APP_A=${A}
            - REACT_APP_Y=fromdockercompose
            - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
            - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
            # - npm_config_unsafe_perm=true
            # - process.env.NODE_ENV='development'
            # - CHOKIDAR_USEPOLLING=true
        tty: true
        stdin_open: true
    
    # web:
    #     container_name: teenyurl_web
    #     build: 
    #         context: ./web
    #         dockerfile: Dockerfile.ubuntu.dev
    #     ports:
    #     - "3000:3000"
    #     # ports:
    #     #     - "3000"        
    #     volumes:
    #     - /app/node_modules
    #     - ./web:/app
    #     # env_file:
    #     # - ./.env
    #     environment: 
    #         - REACT_APP_A=${A}
    #         - REACT_APP_Y=fromdockercompose
    #         - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
    #         - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
    #         - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    #         - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
    #         # - npm_config_unsafe_perm=true
    #         # - process.env.NODE_ENV='development'
    #         - CHOKIDAR_USEPOLLING=true
    #     tty: true
    #     stdin_open: true

    api:
        container_name: teenyurl_api
        build:
            context: ./api
        ports:
            - "8000"
        volumes: 
            - ./api:/usr/src/api
        environment:
            SECRET_KEY: ${SECRET_KEY}
            # DB_URI: ${DB_URI}
            DB_URI: mongodb://${ROOT}:${PASS}@mongo:${PORT}/
    proxy:
        container_name: teenyurl_proxy
        image: nginx:latest
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            # - web
            - api
    mongo:
      container_name: mongodb
      image: mongo:5-focal
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${ROOT}
        MONGO_INITDB_ROOT_PASSWORD: ${PASS}
      # volumes:
      #   - mongodb-store:/data/db
      #   - mongodb-store:/data/configdb
      # networks:
      #   - mongo-compose-network  
      ports:
        - 27017:27017
    mongo-express:
      container_name: mongodb_express
      image: mongo-express:latest
      restart: always
      environment:
        ME_CONFIG_MONGODB_URL: mongodb://${ROOT}:${PASS}@mongo:${PORT}/
      ports:
        - 8001:8081
      depends_on: 
        - mongo          
