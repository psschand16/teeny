version: '3.8'

services:
    webnp:
        build: 
            context: ./webnew
            dockerfile: Dockerfile
        ports:
        - "0.0.0.0:4000:4000"
        # ports:
        #     - "3000"        
        volumes:
        - /app/node_modules
        - ./webnew:/app
        # env_file:
        # - ./.env
        environment: 
            # - NODE_ENV=production
            - NODE_ENV=development
            - REACT_APP_A=${A}
            - REACT_APP_Y=fromdockercompose
            - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
            - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
            # - npm_config_unsafe_perm=true
            - process.env.NODE_ENV='development'
            - CHOKIDAR_USEPOLLING=true
        tty: true
        stdin_open: true

    webnd:
  
        build: 
            context: ./webnd
            dockerfile: Dockerfile
        ports:
        - "0.0.0.0:5000:5000"
        # - "20008:27018"
        # ports:
        #     - "3000"        
        volumes:
        - /app/node_modules
        - ./webnd:/app
        environment: 
            - NODE_ENV=development
            - REACT_APP_A=${A}
            - REACT_APP_Y=fromdockercompose
            - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
            - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
            - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
            # - npm_config_unsafe_perm=true
            - process.env.NODE_ENV='development'
            # - CHOKIDAR_USEPOLLING=true
        # networks:
        #     - teeny_default    
        tty: true
        stdin_open: true

    # webnew-test:
    #     container_name: teenyurl_webnew_webpack-test-container
    #     image: ui-test
    #     command: npm test
    #     build: 
    #         context: ./webnew
    #         dockerfile: Dockerfile1       
    #     volumes:
    #     - /app/node_modules
    #     - ./webnew:/app
    #     # env_file:
    #     # - ./.env
    #     environment: 
    #         - NODE_ENV=test
    #         - REACT_APP_A=${A}
    #         - REACT_APP_Y=fromdockercompose
    #         - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
    #         - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
    #         - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    #         - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
    #         # - npm_config_unsafe_perm=true
    #         # - process.env.NODE_ENV='development'
    #         # - CHOKIDAR_USEPOLLING=true
    #     tty: true
    #     stdin_open: true
    
    # web:
    #     # container_name: teenyurl_web
    #     build: 
    #         context: ./web
    #         dockerfile: Dockerfile.ubuntu.dev
    #     ports:
    #     - "0.0.0.0:3000:3000"
    #     # ports:
    #     #     - "3000"        
    #     volumes:
    #     - /app/node_modules
    #     - ./web:/app
    #     # env_file:
    #     # - ./.env
    #     environment: 
    #         - REACT_APP_A=${A}
    #         - REACT_APP_Y=fromdockercompose
    #         - REACT_APP_URL_HOST=${REACT_APP_URL_HOST}
    #         - REACT_APP_URL_BASEURI=${REACT_APP_URL_BASEURI}
    #         - REACT_APP_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    #         - REACT_APP_FACEBOOK_CLIENT_ID=${FACEBOOK_CLIENT_ID}
    #         # - npm_config_unsafe_perm=true
    #         # - process.env.NODE_ENV='development'
    #         - CHOKIDAR_USEPOLLING=true
    #     tty: true
    #     stdin_open: true
    api:
        build: ./api
        image: fast-api-app
        command: uvicorn main:api --reload --workers 1 --host 0.0.0.0 --port 8000
        ports:
        - 8005:8000 # host port : container port
        volumes:
        - ./api/:/app
        environment:
            SECRET_KEY: ${SECRET_KEY}
            # DB_URI: ${DB_URI}
            DB_URI: mongodb://${ROOT}:${PASS}@mongo:${PORTMONGO}/
   
    # api:
    #     # container_name: teenyurl_api
    #     build:
    #         context: ./api
    #     command: uvicorn main:api --reload --workers 1 --host 0.0.0.0 --port 8000
    #     ports:
    #         - "8000"
    #     volumes: 
    #         # - ./api:/usr/src/api
    #          - ./api:/app
    #     environment:
    #         SECRET_KEY: ${SECRET_KEY}
    #         # DB_URI: ${DB_URI}
    #         DB_URI: mongodb://${ROOT}:${PASS}@mongo:${PORTMONGO}/
    proxy:
        # container_name: teenyurl_proxy
        image: nginx:latest
        ports:
            - "80:80"    
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        # networks:
        #     - teeny_default
            
        depends_on:
            - api
        
    mongo:
      container_name: mongodb
      image: mongo:5-focal
      restart: always
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${ROOT}
        MONGO_INITDB_ROOT_PASSWORD: ${PASS}
      # volumes:
      #   - mongodb-store:/data/db
      #   - mongodb-store:/data/configdb
      # networks:
      #   - mongo-compose-network  
      ports:
        - 27017:27017
    mongo-express:
      container_name: mongodb_express
      image: mongo-express:latest
      restart: always
      environment:
        ME_CONFIG_MONGODB_URL: mongodb://${ROOT}:${PASS}@mongo:${PORTMONGO}/
      ports:
        - 8001:8081
      depends_on: 
        - mongo    


