FROM node:16-alpine
RUN addgroup app && adduser -S -G app app
RUN mkdir /app && chown app:app /app
USER app
WORKDIR /app
RUN rm -rf node_modules
# RUN rm yarn.lock
# RUN rm package-lock.lock


# SO installation
#So now you have two Pythons, the one from the Docker image (where you're pip installing) and the one you run on the command-line, which is different.

COPY package*.json ./
RUN npm config set legacy-peer-deps true
RUN npm install --save --legacy-peer-deps --force
RUN npm uninstall node-sass
RUN npm install sass



# RUN yarn install
# RUN yarn remove node-sass
# RUN yarn add sass


COPY . .
EXPOSE 3000
CMD [“npm”, “start”]





# ===================================
# FROM node:16.8-slim
# WORKDIR /app
# COPY package.json ./
# COPY package-lock.json ./
# COPY ./ ./
# RUN npm i
# CMD ["npm", "run", "start"]
# =====================================

# # pull official base image
# FROM node:13.12.0-alpine

# # set working directory
# WORKDIR /app

# # add `/app/node_modules/.bin` to $PATH
# ENV PATH /app/node_modules/.bin:$PATH

# # install app dependencies
# COPY package.json ./
# COPY package-lock.json ./

# RUN npm install

# # add app
# COPY . ./

# # start app
# CMD ["npm", "start"]
